/*
 * RESTful API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.logsentinel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.logsentinel.model.ExternalDetails;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/**
 * FiredAlert
 */

public class FiredAlert {
  @JsonProperty("actorIds")
  private List<String> actorIds = null;

  @JsonProperty("actualValue")
  private Double actualValue = null;

  @JsonProperty("affectedHosts")
  private List<String> affectedHosts = null;

  @JsonProperty("alertRuleId")
  private UUID alertRuleId = null;

  @JsonProperty("alertRuleName")
  private String alertRuleName = null;

  /**
   * Gets or Sets alertType
   */
  public enum AlertTypeEnum {
    STATISTICAL("STATISTICAL"),
    
    CORRELATION("CORRELATION"),
    
    ANOMALY("ANOMALY"),
    
    LOG_LEVEL_BASED("LOG_LEVEL_BASED"),
    
    THREAT_INTEL_MATCH("THREAT_INTEL_MATCH"),
    
    HEALTHCHECK("HEALTHCHECK"),
    
    WEBSITE_STATIC_RESOURCE_CHANGE("WEBSITE_STATIC_RESOURCE_CHANGE");

    private String value;

    AlertTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AlertTypeEnum fromValue(String text) {
      for (AlertTypeEnum b : AlertTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("alertType")
  private AlertTypeEnum alertType = null;

  @JsonProperty("applicationIds")
  private List<UUID> applicationIds = null;

  @JsonProperty("applicationName")
  private String applicationName = null;

  @JsonProperty("countryCodes")
  private List<String> countryCodes = null;

  @JsonProperty("created")
  private OffsetDateTime created = null;

  @JsonProperty("details")
  private String details = null;

  @JsonProperty("domains")
  private List<String> domains = null;

  @JsonProperty("emails")
  private List<String> emails = null;

  @JsonProperty("entryIds")
  private List<UUID> entryIds = null;

  @JsonProperty("executionDuration")
  private Long executionDuration = null;

  @JsonProperty("externalDetails")
  private List<ExternalDetails> externalDetails = null;

  @JsonProperty("externalIps")
  private List<String> externalIps = null;

  @JsonProperty("fileHashes")
  private List<String> fileHashes = null;

  @JsonProperty("fired")
  private Boolean fired = null;

  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("internalIps")
  private List<String> internalIps = null;

  @JsonProperty("ioc")
  private List<String> ioc = null;

  @JsonProperty("iocTypes")
  private List<String> iocTypes = null;

  @JsonProperty("notified")
  private Boolean notified = null;

  @JsonProperty("organizationId")
  private UUID organizationId = null;

  @JsonProperty("resultDisplayAggregationField")
  private String resultDisplayAggregationField = null;

  @JsonProperty("riskLevel")
  private Integer riskLevel = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    NEW_ALERT("NEW_ALERT"),
    
    IN_TRIAGE("IN_TRIAGE"),
    
    CONFIRMED("CONFIRMED"),
    
    RESOLVED("RESOLVED"),
    
    DISMISSED("DISMISSED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("tags")
  private List<String> tags = null;

  @JsonProperty("threshold")
  private Double threshold = null;

  /**
   * Gets or Sets thresholdType
   */
  public enum ThresholdTypeEnum {
    ABOVE("ABOVE"),
    
    BELOW("BELOW"),
    
    BOTH("BOTH");

    private String value;

    ThresholdTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ThresholdTypeEnum fromValue(String text) {
      for (ThresholdTypeEnum b : ThresholdTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("thresholdType")
  private ThresholdTypeEnum thresholdType = null;

  @JsonProperty("topFields")
  private Map<String, Long> topFields = null;

  @JsonProperty("topFieldsCount")
  private Integer topFieldsCount = null;

  @JsonProperty("triageStartTime")
  private OffsetDateTime triageStartTime = null;

  @JsonProperty("urls")
  private List<String> urls = null;

  public FiredAlert actorIds(List<String> actorIds) {
    this.actorIds = actorIds;
    return this;
  }

  public FiredAlert addActorIdsItem(String actorIdsItem) {
    if (this.actorIds == null) {
      this.actorIds = new ArrayList<>();
    }
    this.actorIds.add(actorIdsItem);
    return this;
  }

   /**
   * Get actorIds
   * @return actorIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getActorIds() {
    return actorIds;
  }

  public void setActorIds(List<String> actorIds) {
    this.actorIds = actorIds;
  }

  public FiredAlert actualValue(Double actualValue) {
    this.actualValue = actualValue;
    return this;
  }

   /**
   * Get actualValue
   * @return actualValue
  **/
  @ApiModelProperty(value = "")
  public Double getActualValue() {
    return actualValue;
  }

  public void setActualValue(Double actualValue) {
    this.actualValue = actualValue;
  }

  public FiredAlert affectedHosts(List<String> affectedHosts) {
    this.affectedHosts = affectedHosts;
    return this;
  }

  public FiredAlert addAffectedHostsItem(String affectedHostsItem) {
    if (this.affectedHosts == null) {
      this.affectedHosts = new ArrayList<>();
    }
    this.affectedHosts.add(affectedHostsItem);
    return this;
  }

   /**
   * Get affectedHosts
   * @return affectedHosts
  **/
  @ApiModelProperty(value = "")
  public List<String> getAffectedHosts() {
    return affectedHosts;
  }

  public void setAffectedHosts(List<String> affectedHosts) {
    this.affectedHosts = affectedHosts;
  }

  public FiredAlert alertRuleId(UUID alertRuleId) {
    this.alertRuleId = alertRuleId;
    return this;
  }

   /**
   * Get alertRuleId
   * @return alertRuleId
  **/
  @ApiModelProperty(value = "")
  public UUID getAlertRuleId() {
    return alertRuleId;
  }

  public void setAlertRuleId(UUID alertRuleId) {
    this.alertRuleId = alertRuleId;
  }

  public FiredAlert alertRuleName(String alertRuleName) {
    this.alertRuleName = alertRuleName;
    return this;
  }

   /**
   * Get alertRuleName
   * @return alertRuleName
  **/
  @ApiModelProperty(value = "")
  public String getAlertRuleName() {
    return alertRuleName;
  }

  public void setAlertRuleName(String alertRuleName) {
    this.alertRuleName = alertRuleName;
  }

  public FiredAlert alertType(AlertTypeEnum alertType) {
    this.alertType = alertType;
    return this;
  }

   /**
   * Get alertType
   * @return alertType
  **/
  @ApiModelProperty(value = "")
  public AlertTypeEnum getAlertType() {
    return alertType;
  }

  public void setAlertType(AlertTypeEnum alertType) {
    this.alertType = alertType;
  }

  public FiredAlert applicationIds(List<UUID> applicationIds) {
    this.applicationIds = applicationIds;
    return this;
  }

  public FiredAlert addApplicationIdsItem(UUID applicationIdsItem) {
    if (this.applicationIds == null) {
      this.applicationIds = new ArrayList<>();
    }
    this.applicationIds.add(applicationIdsItem);
    return this;
  }

   /**
   * Get applicationIds
   * @return applicationIds
  **/
  @ApiModelProperty(value = "")
  public List<UUID> getApplicationIds() {
    return applicationIds;
  }

  public void setApplicationIds(List<UUID> applicationIds) {
    this.applicationIds = applicationIds;
  }

  public FiredAlert applicationName(String applicationName) {
    this.applicationName = applicationName;
    return this;
  }

   /**
   * Get applicationName
   * @return applicationName
  **/
  @ApiModelProperty(value = "")
  public String getApplicationName() {
    return applicationName;
  }

  public void setApplicationName(String applicationName) {
    this.applicationName = applicationName;
  }

  public FiredAlert countryCodes(List<String> countryCodes) {
    this.countryCodes = countryCodes;
    return this;
  }

  public FiredAlert addCountryCodesItem(String countryCodesItem) {
    if (this.countryCodes == null) {
      this.countryCodes = new ArrayList<>();
    }
    this.countryCodes.add(countryCodesItem);
    return this;
  }

   /**
   * Get countryCodes
   * @return countryCodes
  **/
  @ApiModelProperty(value = "")
  public List<String> getCountryCodes() {
    return countryCodes;
  }

  public void setCountryCodes(List<String> countryCodes) {
    this.countryCodes = countryCodes;
  }

  public FiredAlert created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public FiredAlert details(String details) {
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @ApiModelProperty(value = "")
  public String getDetails() {
    return details;
  }

  public void setDetails(String details) {
    this.details = details;
  }

  public FiredAlert domains(List<String> domains) {
    this.domains = domains;
    return this;
  }

  public FiredAlert addDomainsItem(String domainsItem) {
    if (this.domains == null) {
      this.domains = new ArrayList<>();
    }
    this.domains.add(domainsItem);
    return this;
  }

   /**
   * Get domains
   * @return domains
  **/
  @ApiModelProperty(value = "")
  public List<String> getDomains() {
    return domains;
  }

  public void setDomains(List<String> domains) {
    this.domains = domains;
  }

  public FiredAlert emails(List<String> emails) {
    this.emails = emails;
    return this;
  }

  public FiredAlert addEmailsItem(String emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * Get emails
   * @return emails
  **/
  @ApiModelProperty(value = "")
  public List<String> getEmails() {
    return emails;
  }

  public void setEmails(List<String> emails) {
    this.emails = emails;
  }

  public FiredAlert entryIds(List<UUID> entryIds) {
    this.entryIds = entryIds;
    return this;
  }

  public FiredAlert addEntryIdsItem(UUID entryIdsItem) {
    if (this.entryIds == null) {
      this.entryIds = new ArrayList<>();
    }
    this.entryIds.add(entryIdsItem);
    return this;
  }

   /**
   * Get entryIds
   * @return entryIds
  **/
  @ApiModelProperty(value = "")
  public List<UUID> getEntryIds() {
    return entryIds;
  }

  public void setEntryIds(List<UUID> entryIds) {
    this.entryIds = entryIds;
  }

  public FiredAlert executionDuration(Long executionDuration) {
    this.executionDuration = executionDuration;
    return this;
  }

   /**
   * Get executionDuration
   * @return executionDuration
  **/
  @ApiModelProperty(value = "")
  public Long getExecutionDuration() {
    return executionDuration;
  }

  public void setExecutionDuration(Long executionDuration) {
    this.executionDuration = executionDuration;
  }

  public FiredAlert externalDetails(List<ExternalDetails> externalDetails) {
    this.externalDetails = externalDetails;
    return this;
  }

  public FiredAlert addExternalDetailsItem(ExternalDetails externalDetailsItem) {
    if (this.externalDetails == null) {
      this.externalDetails = new ArrayList<>();
    }
    this.externalDetails.add(externalDetailsItem);
    return this;
  }

   /**
   * Get externalDetails
   * @return externalDetails
  **/
  @ApiModelProperty(value = "")
  public List<ExternalDetails> getExternalDetails() {
    return externalDetails;
  }

  public void setExternalDetails(List<ExternalDetails> externalDetails) {
    this.externalDetails = externalDetails;
  }

  public FiredAlert externalIps(List<String> externalIps) {
    this.externalIps = externalIps;
    return this;
  }

  public FiredAlert addExternalIpsItem(String externalIpsItem) {
    if (this.externalIps == null) {
      this.externalIps = new ArrayList<>();
    }
    this.externalIps.add(externalIpsItem);
    return this;
  }

   /**
   * Get externalIps
   * @return externalIps
  **/
  @ApiModelProperty(value = "")
  public List<String> getExternalIps() {
    return externalIps;
  }

  public void setExternalIps(List<String> externalIps) {
    this.externalIps = externalIps;
  }

  public FiredAlert fileHashes(List<String> fileHashes) {
    this.fileHashes = fileHashes;
    return this;
  }

  public FiredAlert addFileHashesItem(String fileHashesItem) {
    if (this.fileHashes == null) {
      this.fileHashes = new ArrayList<>();
    }
    this.fileHashes.add(fileHashesItem);
    return this;
  }

   /**
   * Get fileHashes
   * @return fileHashes
  **/
  @ApiModelProperty(value = "")
  public List<String> getFileHashes() {
    return fileHashes;
  }

  public void setFileHashes(List<String> fileHashes) {
    this.fileHashes = fileHashes;
  }

  public FiredAlert fired(Boolean fired) {
    this.fired = fired;
    return this;
  }

   /**
   * Get fired
   * @return fired
  **/
  @ApiModelProperty(value = "")
  public Boolean isFired() {
    return fired;
  }

  public void setFired(Boolean fired) {
    this.fired = fired;
  }

  public FiredAlert id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public FiredAlert internalIps(List<String> internalIps) {
    this.internalIps = internalIps;
    return this;
  }

  public FiredAlert addInternalIpsItem(String internalIpsItem) {
    if (this.internalIps == null) {
      this.internalIps = new ArrayList<>();
    }
    this.internalIps.add(internalIpsItem);
    return this;
  }

   /**
   * Get internalIps
   * @return internalIps
  **/
  @ApiModelProperty(value = "")
  public List<String> getInternalIps() {
    return internalIps;
  }

  public void setInternalIps(List<String> internalIps) {
    this.internalIps = internalIps;
  }

  public FiredAlert ioc(List<String> ioc) {
    this.ioc = ioc;
    return this;
  }

  public FiredAlert addIocItem(String iocItem) {
    if (this.ioc == null) {
      this.ioc = new ArrayList<>();
    }
    this.ioc.add(iocItem);
    return this;
  }

   /**
   * Get ioc
   * @return ioc
  **/
  @ApiModelProperty(value = "")
  public List<String> getIoc() {
    return ioc;
  }

  public void setIoc(List<String> ioc) {
    this.ioc = ioc;
  }

  public FiredAlert iocTypes(List<String> iocTypes) {
    this.iocTypes = iocTypes;
    return this;
  }

  public FiredAlert addIocTypesItem(String iocTypesItem) {
    if (this.iocTypes == null) {
      this.iocTypes = new ArrayList<>();
    }
    this.iocTypes.add(iocTypesItem);
    return this;
  }

   /**
   * Get iocTypes
   * @return iocTypes
  **/
  @ApiModelProperty(value = "")
  public List<String> getIocTypes() {
    return iocTypes;
  }

  public void setIocTypes(List<String> iocTypes) {
    this.iocTypes = iocTypes;
  }

  public FiredAlert notified(Boolean notified) {
    this.notified = notified;
    return this;
  }

   /**
   * Get notified
   * @return notified
  **/
  @ApiModelProperty(value = "")
  public Boolean isNotified() {
    return notified;
  }

  public void setNotified(Boolean notified) {
    this.notified = notified;
  }

  public FiredAlert organizationId(UUID organizationId) {
    this.organizationId = organizationId;
    return this;
  }

   /**
   * Get organizationId
   * @return organizationId
  **/
  @ApiModelProperty(value = "")
  public UUID getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(UUID organizationId) {
    this.organizationId = organizationId;
  }

  public FiredAlert resultDisplayAggregationField(String resultDisplayAggregationField) {
    this.resultDisplayAggregationField = resultDisplayAggregationField;
    return this;
  }

   /**
   * Get resultDisplayAggregationField
   * @return resultDisplayAggregationField
  **/
  @ApiModelProperty(value = "")
  public String getResultDisplayAggregationField() {
    return resultDisplayAggregationField;
  }

  public void setResultDisplayAggregationField(String resultDisplayAggregationField) {
    this.resultDisplayAggregationField = resultDisplayAggregationField;
  }

  public FiredAlert riskLevel(Integer riskLevel) {
    this.riskLevel = riskLevel;
    return this;
  }

   /**
   * Get riskLevel
   * @return riskLevel
  **/
  @ApiModelProperty(value = "")
  public Integer getRiskLevel() {
    return riskLevel;
  }

  public void setRiskLevel(Integer riskLevel) {
    this.riskLevel = riskLevel;
  }

  public FiredAlert status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public FiredAlert tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public FiredAlert addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public FiredAlert threshold(Double threshold) {
    this.threshold = threshold;
    return this;
  }

   /**
   * Get threshold
   * @return threshold
  **/
  @ApiModelProperty(value = "")
  public Double getThreshold() {
    return threshold;
  }

  public void setThreshold(Double threshold) {
    this.threshold = threshold;
  }

  public FiredAlert thresholdType(ThresholdTypeEnum thresholdType) {
    this.thresholdType = thresholdType;
    return this;
  }

   /**
   * Get thresholdType
   * @return thresholdType
  **/
  @ApiModelProperty(value = "")
  public ThresholdTypeEnum getThresholdType() {
    return thresholdType;
  }

  public void setThresholdType(ThresholdTypeEnum thresholdType) {
    this.thresholdType = thresholdType;
  }

  public FiredAlert topFields(Map<String, Long> topFields) {
    this.topFields = topFields;
    return this;
  }

  public FiredAlert putTopFieldsItem(String key, Long topFieldsItem) {
    if (this.topFields == null) {
      this.topFields = new HashMap<>();
    }
    this.topFields.put(key, topFieldsItem);
    return this;
  }

   /**
   * Get topFields
   * @return topFields
  **/
  @ApiModelProperty(value = "")
  public Map<String, Long> getTopFields() {
    return topFields;
  }

  public void setTopFields(Map<String, Long> topFields) {
    this.topFields = topFields;
  }

  public FiredAlert topFieldsCount(Integer topFieldsCount) {
    this.topFieldsCount = topFieldsCount;
    return this;
  }

   /**
   * Get topFieldsCount
   * @return topFieldsCount
  **/
  @ApiModelProperty(value = "")
  public Integer getTopFieldsCount() {
    return topFieldsCount;
  }

  public void setTopFieldsCount(Integer topFieldsCount) {
    this.topFieldsCount = topFieldsCount;
  }

  public FiredAlert triageStartTime(OffsetDateTime triageStartTime) {
    this.triageStartTime = triageStartTime;
    return this;
  }

   /**
   * Get triageStartTime
   * @return triageStartTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getTriageStartTime() {
    return triageStartTime;
  }

  public void setTriageStartTime(OffsetDateTime triageStartTime) {
    this.triageStartTime = triageStartTime;
  }

  public FiredAlert urls(List<String> urls) {
    this.urls = urls;
    return this;
  }

  public FiredAlert addUrlsItem(String urlsItem) {
    if (this.urls == null) {
      this.urls = new ArrayList<>();
    }
    this.urls.add(urlsItem);
    return this;
  }

   /**
   * Get urls
   * @return urls
  **/
  @ApiModelProperty(value = "")
  public List<String> getUrls() {
    return urls;
  }

  public void setUrls(List<String> urls) {
    this.urls = urls;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FiredAlert firedAlert = (FiredAlert) o;
    return Objects.equals(this.actorIds, firedAlert.actorIds) &&
        Objects.equals(this.actualValue, firedAlert.actualValue) &&
        Objects.equals(this.affectedHosts, firedAlert.affectedHosts) &&
        Objects.equals(this.alertRuleId, firedAlert.alertRuleId) &&
        Objects.equals(this.alertRuleName, firedAlert.alertRuleName) &&
        Objects.equals(this.alertType, firedAlert.alertType) &&
        Objects.equals(this.applicationIds, firedAlert.applicationIds) &&
        Objects.equals(this.applicationName, firedAlert.applicationName) &&
        Objects.equals(this.countryCodes, firedAlert.countryCodes) &&
        Objects.equals(this.created, firedAlert.created) &&
        Objects.equals(this.details, firedAlert.details) &&
        Objects.equals(this.domains, firedAlert.domains) &&
        Objects.equals(this.emails, firedAlert.emails) &&
        Objects.equals(this.entryIds, firedAlert.entryIds) &&
        Objects.equals(this.executionDuration, firedAlert.executionDuration) &&
        Objects.equals(this.externalDetails, firedAlert.externalDetails) &&
        Objects.equals(this.externalIps, firedAlert.externalIps) &&
        Objects.equals(this.fileHashes, firedAlert.fileHashes) &&
        Objects.equals(this.fired, firedAlert.fired) &&
        Objects.equals(this.id, firedAlert.id) &&
        Objects.equals(this.internalIps, firedAlert.internalIps) &&
        Objects.equals(this.ioc, firedAlert.ioc) &&
        Objects.equals(this.iocTypes, firedAlert.iocTypes) &&
        Objects.equals(this.notified, firedAlert.notified) &&
        Objects.equals(this.organizationId, firedAlert.organizationId) &&
        Objects.equals(this.resultDisplayAggregationField, firedAlert.resultDisplayAggregationField) &&
        Objects.equals(this.riskLevel, firedAlert.riskLevel) &&
        Objects.equals(this.status, firedAlert.status) &&
        Objects.equals(this.tags, firedAlert.tags) &&
        Objects.equals(this.threshold, firedAlert.threshold) &&
        Objects.equals(this.thresholdType, firedAlert.thresholdType) &&
        Objects.equals(this.topFields, firedAlert.topFields) &&
        Objects.equals(this.topFieldsCount, firedAlert.topFieldsCount) &&
        Objects.equals(this.triageStartTime, firedAlert.triageStartTime) &&
        Objects.equals(this.urls, firedAlert.urls);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actorIds, actualValue, affectedHosts, alertRuleId, alertRuleName, alertType, applicationIds, applicationName, countryCodes, created, details, domains, emails, entryIds, executionDuration, externalDetails, externalIps, fileHashes, fired, id, internalIps, ioc, iocTypes, notified, organizationId, resultDisplayAggregationField, riskLevel, status, tags, threshold, thresholdType, topFields, topFieldsCount, triageStartTime, urls);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FiredAlert {\n");
    
    sb.append("    actorIds: ").append(toIndentedString(actorIds)).append("\n");
    sb.append("    actualValue: ").append(toIndentedString(actualValue)).append("\n");
    sb.append("    affectedHosts: ").append(toIndentedString(affectedHosts)).append("\n");
    sb.append("    alertRuleId: ").append(toIndentedString(alertRuleId)).append("\n");
    sb.append("    alertRuleName: ").append(toIndentedString(alertRuleName)).append("\n");
    sb.append("    alertType: ").append(toIndentedString(alertType)).append("\n");
    sb.append("    applicationIds: ").append(toIndentedString(applicationIds)).append("\n");
    sb.append("    applicationName: ").append(toIndentedString(applicationName)).append("\n");
    sb.append("    countryCodes: ").append(toIndentedString(countryCodes)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    domains: ").append(toIndentedString(domains)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    entryIds: ").append(toIndentedString(entryIds)).append("\n");
    sb.append("    executionDuration: ").append(toIndentedString(executionDuration)).append("\n");
    sb.append("    externalDetails: ").append(toIndentedString(externalDetails)).append("\n");
    sb.append("    externalIps: ").append(toIndentedString(externalIps)).append("\n");
    sb.append("    fileHashes: ").append(toIndentedString(fileHashes)).append("\n");
    sb.append("    fired: ").append(toIndentedString(fired)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    internalIps: ").append(toIndentedString(internalIps)).append("\n");
    sb.append("    ioc: ").append(toIndentedString(ioc)).append("\n");
    sb.append("    iocTypes: ").append(toIndentedString(iocTypes)).append("\n");
    sb.append("    notified: ").append(toIndentedString(notified)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    resultDisplayAggregationField: ").append(toIndentedString(resultDisplayAggregationField)).append("\n");
    sb.append("    riskLevel: ").append(toIndentedString(riskLevel)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    threshold: ").append(toIndentedString(threshold)).append("\n");
    sb.append("    thresholdType: ").append(toIndentedString(thresholdType)).append("\n");
    sb.append("    topFields: ").append(toIndentedString(topFields)).append("\n");
    sb.append("    topFieldsCount: ").append(toIndentedString(topFieldsCount)).append("\n");
    sb.append("    triageStartTime: ").append(toIndentedString(triageStartTime)).append("\n");
    sb.append("    urls: ").append(toIndentedString(urls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

