/*
 * RESTful API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.logsentinel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.logsentinel.model.AuditLogEntry;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * AutomatedResponse
 */

public class AutomatedResponse {
  @JsonProperty("command")
  private String command = null;

  @JsonProperty("commandParameter")
  private String commandParameter = null;

  /**
   * Gets or Sets commandType
   */
  public enum CommandTypeEnum {
    COLLECTOR("COLLECTOR"),
    
    AGENT("AGENT");

    private String value;

    CommandTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CommandTypeEnum fromValue(String text) {
      for (CommandTypeEnum b : CommandTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("commandType")
  private CommandTypeEnum commandType = null;

  @JsonProperty("context")
  private List<AuditLogEntry> context = null;

  @JsonProperty("pythonScript")
  private String pythonScript = null;

  @JsonProperty("targetHost")
  private String targetHost = null;

  /**
   * Gets or Sets targetType
   */
  public enum TargetTypeEnum {
    WINDOWS("WINDOWS"),
    
    MACOS("MACOS"),
    
    LINUX("LINUX"),
    
    FIREWALL("FIREWALL"),
    
    ACTIVE_DIRECTORY("ACTIVE_DIRECTORY");

    private String value;

    TargetTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TargetTypeEnum fromValue(String text) {
      for (TargetTypeEnum b : TargetTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("targetType")
  private TargetTypeEnum targetType = null;

  public AutomatedResponse command(String command) {
    this.command = command;
    return this;
  }

   /**
   * Get command
   * @return command
  **/
  @ApiModelProperty(value = "")
  public String getCommand() {
    return command;
  }

  public void setCommand(String command) {
    this.command = command;
  }

  public AutomatedResponse commandParameter(String commandParameter) {
    this.commandParameter = commandParameter;
    return this;
  }

   /**
   * Get commandParameter
   * @return commandParameter
  **/
  @ApiModelProperty(value = "")
  public String getCommandParameter() {
    return commandParameter;
  }

  public void setCommandParameter(String commandParameter) {
    this.commandParameter = commandParameter;
  }

  public AutomatedResponse commandType(CommandTypeEnum commandType) {
    this.commandType = commandType;
    return this;
  }

   /**
   * Get commandType
   * @return commandType
  **/
  @ApiModelProperty(value = "")
  public CommandTypeEnum getCommandType() {
    return commandType;
  }

  public void setCommandType(CommandTypeEnum commandType) {
    this.commandType = commandType;
  }

  public AutomatedResponse context(List<AuditLogEntry> context) {
    this.context = context;
    return this;
  }

  public AutomatedResponse addContextItem(AuditLogEntry contextItem) {
    if (this.context == null) {
      this.context = new ArrayList<>();
    }
    this.context.add(contextItem);
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @ApiModelProperty(value = "")
  public List<AuditLogEntry> getContext() {
    return context;
  }

  public void setContext(List<AuditLogEntry> context) {
    this.context = context;
  }

  public AutomatedResponse pythonScript(String pythonScript) {
    this.pythonScript = pythonScript;
    return this;
  }

   /**
   * Get pythonScript
   * @return pythonScript
  **/
  @ApiModelProperty(value = "")
  public String getPythonScript() {
    return pythonScript;
  }

  public void setPythonScript(String pythonScript) {
    this.pythonScript = pythonScript;
  }

  public AutomatedResponse targetHost(String targetHost) {
    this.targetHost = targetHost;
    return this;
  }

   /**
   * Get targetHost
   * @return targetHost
  **/
  @ApiModelProperty(value = "")
  public String getTargetHost() {
    return targetHost;
  }

  public void setTargetHost(String targetHost) {
    this.targetHost = targetHost;
  }

  public AutomatedResponse targetType(TargetTypeEnum targetType) {
    this.targetType = targetType;
    return this;
  }

   /**
   * Get targetType
   * @return targetType
  **/
  @ApiModelProperty(value = "")
  public TargetTypeEnum getTargetType() {
    return targetType;
  }

  public void setTargetType(TargetTypeEnum targetType) {
    this.targetType = targetType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomatedResponse automatedResponse = (AutomatedResponse) o;
    return Objects.equals(this.command, automatedResponse.command) &&
        Objects.equals(this.commandParameter, automatedResponse.commandParameter) &&
        Objects.equals(this.commandType, automatedResponse.commandType) &&
        Objects.equals(this.context, automatedResponse.context) &&
        Objects.equals(this.pythonScript, automatedResponse.pythonScript) &&
        Objects.equals(this.targetHost, automatedResponse.targetHost) &&
        Objects.equals(this.targetType, automatedResponse.targetType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(command, commandParameter, commandType, context, pythonScript, targetHost, targetType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomatedResponse {\n");
    
    sb.append("    command: ").append(toIndentedString(command)).append("\n");
    sb.append("    commandParameter: ").append(toIndentedString(commandParameter)).append("\n");
    sb.append("    commandType: ").append(toIndentedString(commandType)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    pythonScript: ").append(toIndentedString(pythonScript)).append("\n");
    sb.append("    targetHost: ").append(toIndentedString(targetHost)).append("\n");
    sb.append("    targetType: ").append(toIndentedString(targetType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

