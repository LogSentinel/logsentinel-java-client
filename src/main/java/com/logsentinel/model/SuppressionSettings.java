/*
 * RESTful API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.logsentinel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * SuppressionSettings
 */

public class SuppressionSettings {
  @JsonProperty("allowIdenticalAlerts")
  private Boolean allowIdenticalAlerts = null;

  @JsonProperty("suppressAfterOtherAlerts")
  private List<UUID> suppressAfterOtherAlerts = null;

  @JsonProperty("suppressAlertsWithIdenticalTopFields")
  private Boolean suppressAlertsWithIdenticalTopFields = null;

  @JsonProperty("suppressCount")
  private Integer suppressCount = null;

  @JsonProperty("suppressPeriod")
  private Integer suppressPeriod = null;

  @JsonProperty("suppressSubsequent")
  private Integer suppressSubsequent = null;

  public SuppressionSettings allowIdenticalAlerts(Boolean allowIdenticalAlerts) {
    this.allowIdenticalAlerts = allowIdenticalAlerts;
    return this;
  }

   /**
   * Get allowIdenticalAlerts
   * @return allowIdenticalAlerts
  **/
  @ApiModelProperty(value = "")
  public Boolean isAllowIdenticalAlerts() {
    return allowIdenticalAlerts;
  }

  public void setAllowIdenticalAlerts(Boolean allowIdenticalAlerts) {
    this.allowIdenticalAlerts = allowIdenticalAlerts;
  }

  public SuppressionSettings suppressAfterOtherAlerts(List<UUID> suppressAfterOtherAlerts) {
    this.suppressAfterOtherAlerts = suppressAfterOtherAlerts;
    return this;
  }

  public SuppressionSettings addSuppressAfterOtherAlertsItem(UUID suppressAfterOtherAlertsItem) {
    if (this.suppressAfterOtherAlerts == null) {
      this.suppressAfterOtherAlerts = new ArrayList<>();
    }
    this.suppressAfterOtherAlerts.add(suppressAfterOtherAlertsItem);
    return this;
  }

   /**
   * Get suppressAfterOtherAlerts
   * @return suppressAfterOtherAlerts
  **/
  @ApiModelProperty(value = "")
  public List<UUID> getSuppressAfterOtherAlerts() {
    return suppressAfterOtherAlerts;
  }

  public void setSuppressAfterOtherAlerts(List<UUID> suppressAfterOtherAlerts) {
    this.suppressAfterOtherAlerts = suppressAfterOtherAlerts;
  }

  public SuppressionSettings suppressAlertsWithIdenticalTopFields(Boolean suppressAlertsWithIdenticalTopFields) {
    this.suppressAlertsWithIdenticalTopFields = suppressAlertsWithIdenticalTopFields;
    return this;
  }

   /**
   * Get suppressAlertsWithIdenticalTopFields
   * @return suppressAlertsWithIdenticalTopFields
  **/
  @ApiModelProperty(value = "")
  public Boolean isSuppressAlertsWithIdenticalTopFields() {
    return suppressAlertsWithIdenticalTopFields;
  }

  public void setSuppressAlertsWithIdenticalTopFields(Boolean suppressAlertsWithIdenticalTopFields) {
    this.suppressAlertsWithIdenticalTopFields = suppressAlertsWithIdenticalTopFields;
  }

  public SuppressionSettings suppressCount(Integer suppressCount) {
    this.suppressCount = suppressCount;
    return this;
  }

   /**
   * Get suppressCount
   * @return suppressCount
  **/
  @ApiModelProperty(value = "")
  public Integer getSuppressCount() {
    return suppressCount;
  }

  public void setSuppressCount(Integer suppressCount) {
    this.suppressCount = suppressCount;
  }

  public SuppressionSettings suppressPeriod(Integer suppressPeriod) {
    this.suppressPeriod = suppressPeriod;
    return this;
  }

   /**
   * Get suppressPeriod
   * @return suppressPeriod
  **/
  @ApiModelProperty(value = "")
  public Integer getSuppressPeriod() {
    return suppressPeriod;
  }

  public void setSuppressPeriod(Integer suppressPeriod) {
    this.suppressPeriod = suppressPeriod;
  }

  public SuppressionSettings suppressSubsequent(Integer suppressSubsequent) {
    this.suppressSubsequent = suppressSubsequent;
    return this;
  }

   /**
   * Get suppressSubsequent
   * @return suppressSubsequent
  **/
  @ApiModelProperty(value = "")
  public Integer getSuppressSubsequent() {
    return suppressSubsequent;
  }

  public void setSuppressSubsequent(Integer suppressSubsequent) {
    this.suppressSubsequent = suppressSubsequent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SuppressionSettings suppressionSettings = (SuppressionSettings) o;
    return Objects.equals(this.allowIdenticalAlerts, suppressionSettings.allowIdenticalAlerts) &&
        Objects.equals(this.suppressAfterOtherAlerts, suppressionSettings.suppressAfterOtherAlerts) &&
        Objects.equals(this.suppressAlertsWithIdenticalTopFields, suppressionSettings.suppressAlertsWithIdenticalTopFields) &&
        Objects.equals(this.suppressCount, suppressionSettings.suppressCount) &&
        Objects.equals(this.suppressPeriod, suppressionSettings.suppressPeriod) &&
        Objects.equals(this.suppressSubsequent, suppressionSettings.suppressSubsequent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowIdenticalAlerts, suppressAfterOtherAlerts, suppressAlertsWithIdenticalTopFields, suppressCount, suppressPeriod, suppressSubsequent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SuppressionSettings {\n");
    
    sb.append("    allowIdenticalAlerts: ").append(toIndentedString(allowIdenticalAlerts)).append("\n");
    sb.append("    suppressAfterOtherAlerts: ").append(toIndentedString(suppressAfterOtherAlerts)).append("\n");
    sb.append("    suppressAlertsWithIdenticalTopFields: ").append(toIndentedString(suppressAlertsWithIdenticalTopFields)).append("\n");
    sb.append("    suppressCount: ").append(toIndentedString(suppressCount)).append("\n");
    sb.append("    suppressPeriod: ").append(toIndentedString(suppressPeriod)).append("\n");
    sb.append("    suppressSubsequent: ").append(toIndentedString(suppressSubsequent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

